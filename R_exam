library(ncdf4) # import the copernicus file (in nc)
library(raster) # work with raster file (single layer data)
library(viridis) # plot the color palette
library(RStoolbox) # useful for remote sensing image processing (make classification)
library(ggplot2) # create graphics - ggplot function
library(gridExtra) # for multiframe ggplot
library(patchwork) # multiframe graphics
library(rgdal) # to open shape file

#set the working directory
setwd("/Users/sarapiccini/Documents/datandvi")

#import data together 
NDVI <- list.files(pattern="NDVI")
NDVI
#"c_gls_NDVI_199906110000_GLOBE_VGT_V2.2.1.nc"   
#"c_gls_NDVI_202006110000_GLOBE_PROBAV_V2.2.1.nc"

# apply raster function to all the files
NDVIr <- lapply(NDVI, raster)
NDVIr

NDVIstack <- stack(NDVIr)
plot(NDVIstack)

ext <- c(-20, 60, -80, 40)
NDVIcrop <- crop(NDVIstack, ext)
plot(NDVIcrop)
NDVIcrop

june1999 <- NDVIcrop$Normalized.Difference.Vegetation.Index.1KM.1
june2020 <- NDVIcrop$Normalized.Difference.Vegetation.Index.1KM.2

g1 <- ggplot() + geom_raster(data= june1999, mapping = aes(x=x, y=y, fill= Normalized.Difference.Vegetation.Index.1KM.1)) + scale_fill_viridis(option = "magma") + ggtitle("june1999")
g2 <- ggplot() + geom_raster(data= june2020, mapping = aes(x=x, y=y, fill= Normalized.Difference.Vegetation.Index.1KM.2)) + scale_fill_viridis(option = "magma") + ggtitle("june2020")

g1/g2

NDVIdif<-june2020-june1999
plot(NDVIdif)
par(mfrow=c(2,2))
plot(june1999)
plot(june2020)
plot(NDVIdif)

cl= colorRampPalette(c("white", "brown", "blue", "light green", "dark green"))(100)
plot(NDVIdif, col =cl)
FCOVER <- list.files(pattern="FCOVER")
FCOVER

#"c_gls_FCOVER_199905200000_GLOBE_VGT_V2.0.2.nc"       
#"c_gls_FCOVER-RT1_202006200000_GLOBE_PROBAV_V2.0.1.nc"

FCOVERr <- lapply(FCOVER, raster)
FCOVERr

FCOVERstack <- stack(FCOVERr)
plot(FCOVERstack)


FCOVERcrop <- crop(FCOVERstack, ext)
plot(FCOVERcrop)
FCOVERcrop

FCjune1999 <- FCOVERcrop$Fraction.of.green.Vegetation.Cover.1km.1
FCjune2020 <- FCOVERcrop$Fraction.of.green.Vegetation.Cover.1km.2

g1FC <- ggplot() + geom_raster(data= FCjune1999, mapping = aes(x=x, y=y, fill= Fraction.of.green.Vegetation.Cover.1km.1)) + scale_fill_viridis() + ggtitle("FCjune1999")
g2FC <- ggplot() + geom_raster(data= FCjune2020, mapping = aes(x=x, y=y, fill= Fraction.of.green.Vegetation.Cover.1km.2)) + scale_fill_viridis() + ggtitle("FCjune2020")

g1FC/g2FC

FCdif<-FCjune2020-FCjune1999
plot(FCdif)
par(mfrow=c(2,2))
plot(FCjune1999)
plot(FCjune2020)
plot(FCdif)

SWI <- list.files(pattern="SWI")
SWI

SWIr <- lapply(SWI, raster)
SWIr

SWIstack <- stack(SWIr)
plot(SWIstack)

SWIcrop <- crop(SWIstack, ext)
plot(SWIcrop)
SWIcrop

SWIjune2007 <- SWIcrop$Soil.Water.Index.with.T.5.1
SWIjune2020 <- SWIcrop$Soil.Water.Index.with.T.5.2

g1SWI <- ggplot() + geom_raster(data= SWIjune2007, mapping = aes(x=x, y=y, fill= Soil.Water.Index.with.T.5.1)) + scale_fill_viridis() + ggtitle("SWIjune2007")
g2SWI <- ggplot() + geom_raster(data= SWIjune2020, mapping = aes(x=x, y=y, fill= Soil.Water.Index.with.T.5.2)) + scale_fill_viridis() + ggtitle("SWIjune2020")

g1SWI/g2SWI

SWIdif<-SWIjune2020-SWIjune2007
plot(SWIdif)
par(mfrow=c(2,2))
plot(SWIjune2007)
plot(SWIjune2020)
plot(SWIdif)
plot(FCdif)

LC2000 <- raster("U2018_CLC2018_V2020_20u1.tif")
points <- SpatialPoints(coords, proj4string =CRS("+proj=longlat +datum=WGS84"))
pp <- spTransform(points, "EPSG:3035")
lats <- c(U2018_CLC2018_V2020_20u1.tif$lat_0=52)
lons <- c(U2018_CLC2018_V2020_20u1.tif$lon_0=10) 

install.packages("sp")

LC2001 <- brick("LAND2001.jpg")
plotRGB(LC2001, r=1, g=2, b=3, stretch="lin")
ggRGB(LC2001, r=1, g=2, b=3, stretch="lin")
ext <- c(320, 460, 125, 220)
LC2001crop <- crop(LC2001, ext)
ggRGB(LC2001crop, r=1, g=2, b=3, stretch="lin")

LC2011 <- brick("LAND2011.jpg")
plotRGB(LC2011, r=1, g=2, b=3, stretch="lin")
ggRGB(LC2011, r=1, g=2, b=3, stretch="lin")
LC2011crop <- crop(LC2011, ext)
ggRGB(LC2011crop, r=1, g=2, b=3, stretch="lin")

par(mfrow=c(1,2))
plotRGB(LC2001crop, r=1, g=2, b=3, stretch="lin")
plotRGB(LC2011crop, r=1, g=2, b=3, stretch="lin")

# multiframe with ggplot2 and gridExtra
p1 <- ggRGB(defor1, r=1, g=2, b=3, stretch="lin")
p2 <- ggRGB(defor2, r=1, g=2, b=3, stretch="lin")
grid.arrange(p1, p2, nrow=2)

# unsupervised classification
d1c <- unsuperClass(defor1, nClasses=2)
plot(d1c$map)
# class 1: forest
# class 2: agriculture

# set.seed() would allow you to attain the same results ...

d2c <- unsuperClass(defor2, nClasses=2)
plot(d2c$map)
# class 1: agriculture
# class 2: forest

d2c3 <- unsuperClass(defor2, nClasses=3)
plot(d2c3$map)

# frequencies
freq(d1c$map)
#   value  count
# [1,]     1 306583
# [2,]     2  34709

s1 <- 306583 + 34709

prop1 <- freq(d1c$map) / s1
# prop forest: 0.8983012
# prop agriculture: 0.1016988

s2 <- 342726
prop2 <- freq(d2c$map) / s2
# prop forest: 0.5206958
# prop agriculture: 0.4793042

# build a dataframe
cover <- c("Forest","Agriculture")
percent_1992 <- c(89.83, 10.16)
percent_2006 <- c(52.06, 47.93)

percentages <- data.frame(cover, percent_1992, percent_2006)
percentages

# let's plot them!
ggplot(percentages, aes(x=cover, y=percent_1992, color=cover)) + geom_bar(stat="identity", fill="white")
ggplot(percentages, aes(x=cover, y=percent_2006, color=cover)) + geom_bar(stat="identity", fill="white")

p1 <- ggplot(percentages, aes(x=cover, y=percent_1992, color=cover)) + geom_bar(stat="identity", fill="white")
p2 <- ggplot(percentages, aes(x=cover, y=percent_2006, color=cover)) + geom_bar(stat="identity", fill="white")

grid.arrange(p1, p2, nrow=1)








